From 9e8af362841354e296ac7f9dc3eee84596d4a985 Mon Sep 17 00:00:00 2001
From: Mathis Duret <mduret@esoftthings.com>
Date: Fri, 7 Feb 2020 08:30:13 +0000
Subject: [PATCH] Mfis add poll

---
 drivers/hwspinlock/rcar_hwspinlock.c | 38 ++++++++++++++++++++++++++++++++++--
 1 file changed, 36 insertions(+), 2 deletions(-)

diff --git a/drivers/hwspinlock/rcar_hwspinlock.c b/drivers/hwspinlock/rcar_hwspinlock.c
index bed21c2..4930bc5 100755
--- a/drivers/hwspinlock/rcar_hwspinlock.c
+++ b/drivers/hwspinlock/rcar_hwspinlock.c
@@ -42,6 +42,7 @@
 #include <linux/string.h>
 #include <linux/fs.h> 
 #include <linux/io-mapping.h>
+#include <linux/poll.h>
 #include "hwspinlock_internal.h"
 
 /******************************************************************************************
@@ -125,6 +126,7 @@ static void rcar_hwspinlock_unlock(struct hwspinlock *lock);
 static int rcar_hwspinlock_probe(struct platform_device *pdev);
 static int rcar_hwspinlock_remove(struct platform_device *pdev);
 static int __init rcar_hwspinlock_init(void);
+static unsigned int mfis_cam_poll(struct file *filp, struct poll_table_struct *wait);
 static void __exit rcar_hwspinlock_exit(void);
 /******************************************************************************************
  *
@@ -575,7 +577,6 @@ static ssize_t mfis_cam_read(struct file *filep, char *buffer, size_t len, loff_
     int cam_read_id = iminor(filep->f_inode);
     char tx_buff[len];
     int last_frame; 
-    wait_event_interruptible(wait_queue_cam_it[cam_read_id], wait_queue_cam_flag[cam_read_id]);
     wait_queue_cam_flag[cam_read_id] = 0;
     /* Prepare TX buffer with last cam ID and number of IRQ since last read */
 
@@ -618,6 +619,38 @@ static ssize_t mfis_cam_read(struct file *filep, char *buffer, size_t len, loff_
     }
     return 1;
 }
+
+/***********************************************************************************************************************
+ *
+ * Function Name: mfis_cam_poll
+ *
+ * Purpose:
+ *
+ * Input Parameters:     N/A
+ *
+ * Output Parameters:    N/A
+ *
+ * Comment: None
+***********************************************************************************************************************/
+static unsigned int mfis_cam_poll(struct file *filp, struct poll_table_struct *wait)
+{
+    int cam_read_id = iminor(filp->f_inode);
+    unsigned int mask = 0;
+    poll_wait (filp, &wait_queue_cam_it[cam_read_id], wait);
+
+
+    if(wait_queue_cam_flag[cam_read_id]) /* check if data has been read */
+    {
+    	  mask|= POLLIN | POLLRDNORM;
+    }
+    else
+    {
+    	return 0;
+    }
+
+    return mask;
+}
+
 /***********************************************************************************************************************
 * File operations structure
 ***********************************************************************************************************************/
@@ -634,7 +667,8 @@ static struct file_operations mfis_cam_fops =
     .owner = THIS_MODULE,
     .open = mfis_cam_open,
     .release = mfis_cam_close,
-    .read = mfis_cam_read
+    .read = mfis_cam_read,
+    .poll = mfis_cam_poll
 };
 
 /******************************************************************************************
-- 
2.7.4

